package Lab7_HW;
import java.awt.*;
import simView.*;

public class RRSM extends ViewableDigraph
{

	final int NODE = 6;		//노드개수  
	final int QUEUE = 2;	//큐사이즈
	
	int procTime = 130;
	

	
	public RRSM()
	{
		super("gpt");
    	
		ViewableAtomic g = new genr("genr", 50);
		ViewableAtomic s = new scheduler("scheduler", 0, NODE);	//스케쥴링하는데에 시간 안 쓸 것  
		ViewableAtomic t = new transd("transd", 6000, NODE);
    	
		add(g);
		add(s);
		add(t);
  
		addCoupling(g, "out", s, "in");
		addCoupling(g, "out", t, "ariv");
		addCoupling(t, "out", g, "in");
		
		
		
		for(int i = 1; i <= NODE; i++) {									//
			
			ViewableAtomic p = new processor("processor"+i, procTime, QUEUE);
			add(p);
			
			addCoupling(p, "out1", t, "solved");
			addCoupling(p, "out2", t, "loss");
			
			addCoupling(s, "out"+i, p, "in");
			
			procTime += 30;
			
			
		}
		
		
	}

    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(988, 646);
        ((ViewableComponent)withName("scheduler")).setPreferredLocation(new Point(218, 205));
        ((ViewableComponent)withName("processor2")).setPreferredLocation(new Point(558, 94));
        ((ViewableComponent)withName("processor1")).setPreferredLocation(new Point(520, 29));
        ((ViewableComponent)withName("processor4")).setPreferredLocation(new Point(554, 246));
        ((ViewableComponent)withName("genr")).setPreferredLocation(new Point(50, 50));
        ((ViewableComponent)withName("processor3")).setPreferredLocation(new Point(569, 173));
        ((ViewableComponent)withName("transd")).setPreferredLocation(new Point(836, 291));
        ((ViewableComponent)withName("processor6")).setPreferredLocation(new Point(582, 465));
        ((ViewableComponent)withName("processor5")).setPreferredLocation(new Point(586, 373));
    }
}
